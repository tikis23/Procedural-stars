#version 410 core

layout(location = 0) in vec3 in_position;
layout(location = 1) in vec3 in_normal;
layout(location = 2) in vec3 in_color;

out VertexOut {
    vec3 position;
    vec3 normal;
    vec3 color;
} vertex;

void main()
{
//    mat3 normalMatrix = transpose(inverse(mat3(model)));
//    mat4 viewModel = view * model;
//    vec4 viewPos = viewModel * vec4(in_position, 1);
//
//    normal = normalize(in_normal);
//    v_color = vec4(in_color.xyz, 1);
//
//    fragPos = viewPos.xyz;
//    gl_Position = projection * viewPos;
    vertex.color = in_color;
    vertex.normal = normalize(in_position);//in_normal;
    vertex.position = in_position;
}