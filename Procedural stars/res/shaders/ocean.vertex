#version 330 core

layout(location = 0) in vec4 in_position;

out VertexData
{
    vec4 color;
} vertex;

uniform float u_zOffset;
uniform float u_r;
uniform vec3 u_u;
uniform vec3 u_v;
uniform vec3 u_w;
uniform mat4 u_modelRot;

void main()
{
    vertex.color = vec4(0.2, 0.2, 0.7, 1);

	// rotate grid
	vec3 g = in_position.xyz;
	g.z = (1 - g.x*g.x*g.x*g.x) * (1 - g.y*g.y*g.y*g.y) + u_zOffset;
	vec3 o;
	o.x = g.x * u_u.x + g.y * u_v.x + g.z * u_w.x;
	o.y = g.x * u_u.y + g.y * u_v.y + g.z * u_w.y;
	o.z = g.x * u_u.z + g.y * u_v.z + g.z * u_w.z;
	o = normalize(o);
	g = o * u_r;

	// get ocean level
	float oceanLevel = 5 + sin(gl_InstanceID);

    gl_Position = vec4(g + o * oceanLevel, 1);
}